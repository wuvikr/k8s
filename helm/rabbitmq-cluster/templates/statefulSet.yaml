kind: StatefulSet
apiVersion: apps/v1
metadata:
  labels:
    {{- include "rabbitmq-cluster.labels" . | nindent 4 }}
  name: {{ .Release.Name }}-sts
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 3
  selector:
    matchLabels:
      {{- include "rabbitmq-cluster.selectorLabels" . | nindent 6 }}
  serviceName: {{ .Release.Name }}-headless
  template:
    metadata:
      labels:
        {{- include "rabbitmq-cluster.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - args:
        - -c
        - cp -v /etc/rabbitmq/rabbitmq.conf ${RABBITMQ_CONFIG_FILE}; exec docker-entrypoint.sh
          rabbitmq-server
        command:
        - sh
        env:
        - name: TZ
          value: 'Asia/Shanghai'
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              key: cookie
              name: {{ .Release.Name }}-secret
        - name: K8S_SERVICE_NAME
          value: {{ .Release.Name }}-headless
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: RABBITMQ_NODENAME
          value: rabbit@$(POD_NAME).$(K8S_SERVICE_NAME).$(POD_NAMESPACE).svc.cluster.local
        - name: RABBITMQ_CONFIG_FILE
          value: /var/lib/rabbitmq/rabbitmq.conf
        image: {{ .Values.image.name }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - status
          # See https://www.rabbitmq.com/monitoring.html for monitoring frequency recommendations.
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 15
        name: rabbitmq
        ports:
        - containerPort: 15672
          name: http
          protocol: TCP
        - containerPort: 5672
          name: amqp
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - status
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /etc/rabbitmq
          name: config-volume
          readOnly: false
      #  - mountPath: /var/lib/rabbitmq
      #    name: rabbitmq-storage
      #    readOnly: false
        - name: timezone
          mountPath: /etc/localtime
          readOnly: true
      serviceAccountName: {{ .Release.Name }}-sa
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config-volume
        configMap:
          items:
          - key: rabbitmq.conf
            path: rabbitmq.conf
          - key: enabled_plugins
            path: enabled_plugins
          name: {{ .Release.Name }}-config
      - name: timezone
        hostPath:
          path: /usr/share/zoneinfo/Asia/Shanghai
#  volumeClaimTemplates:
#  - metadata:
#      name: rabbitmq-storage
#    spec:
#      accessModes:
#      - ReadWriteMany
#      storageClassName: "managed-storage-class"
#      resources:
#        requests:
#          storage: 4Gi
